#!/usr/bin/env ruby
require 'json'

class Info_Fetchers
  def weather
    %x[weather 78758].gsub(':', ',').gsub(/F$/,'°F')
  end
  def battery
    %x[acpi -V|head -n 1].scan(/\d+%/)[0]
  end
  def processor_temp 
    n = File.read("/sys/class/thermal/thermal_zone0/temp").chomp!.to_i / 1000
    #return "" + 
    return n.to_s + "°C"
  end

  def network
    ((%x[netctl list].split("\n").select { |n| 
      n if n[0] == "*"
    }.first) || "offline").gsub("* ", "")
  end
  def volume_level 
    "#{%x[amixer get Master | grep -woE '([0-9]+)\%' | head -1].chomp!}"
  end
  def time
    date = Time.now
    date.strftime('%l:%M%p').gsub(/^ /, "").downcase
  end
  def email
    "✉"
  end
end

def generate_bar_json(fetchers)
  [
    #{
    #  :symbol => "T",
    #  :color => "#dc0000",
    #  :text => fetchers.time
    #},
    {
      :symbol => "☂",
      :color => "#c84d00",
      :text => fetchers.weather
    },
    {
      :symbol => ">",
      :color => "#530067",
      :text => fetchers.network
    },   
    {
      :symbol => "♫",
      :color => "#5200fd",
      :text => fetchers.volume_level
    },
    {
      :symbol => "B",
      :color => "#188200",
      :text => fetchers.battery
    }
  ].map do |f|
    text = [
      "<span size='small' underline_color='#ffffff' underline='double'>",
      "<span bgcolor='#{f[:color]}' fgcolor='#ffffff'> #{f[:symbol]} </span>",
      "</span>",

      "<span underline='double' underline_color='#ececec'>",
      "<span fgcolor='#2b2b2b' bgcolor='#f9f9f9'> #{f[:text]} </span>",
      "</span>"
      #,
      # "<span letter_spacing='500' font_stretch='ultracondensed' rise='2000' size='1000' underline_color='#ffffff' underline='none'>",
      #"#{"|".fg(f[:fg]).bg(f[:fg])}",
      #"</span>"
    ].join

    {
      :separator => false,
      :separator_block_width => 10,
      :align => 'left',
      :min_width => 0,
      :full_text => text,
      :markup => 'pango'
    }
  end.to_json
end

def init
  puts '{ "version": 1 }'
  puts "["
  puts "[]"
  fetchers = Info_Fetchers.new

  loop do
    puts "," + generate_bar_json(fetchers)
    STDOUT.flush
    sleep 40
  end
end

init
