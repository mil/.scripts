#!/usr/bin/env ruby
require 'json'
# A dmenu display customization script
# Assumes dmenu with q,xywh,xft patches
# http://github.com/mil/dmenu-q-xywh-xft
# or with dim dmenu2

# Setup Screen Dimensions Info
if (!File.exists?('#{Dir.home}/.screen_dimensions')) then
  %x[write_dimensions]
end
dimensions = IO.read("#{Dir.home}/.screen_dimensions").to_s.chomp!.split('x')
$screen = {
  :width => dimensions[0].to_i,
  :height => dimensions[1].to_i
}




# Setup App Dimensions Info

# Defaults
$defaults = { 
  #:dim => 0.5,
  :h => 40,
  :x => 10,
  :y => ($screen[:height] / 2) - 20,
  :w => $screen[:width] - 20,
  :fn => 'Envy Code R-13',
  :sb => '#0073bf',
  :sf => '#ffffff',
  :nb => '#000000',
  :nf => '#c4c4c4',
  :p  => 'Rd Menu'
}

$app = $defaults

#Profiles
$profiles = {}
$profiles["launch"] = { 
  :p => "Launch",
  :sb => "#003eef",
  :nb => "#efefef",
  :nf => "#000000",
  :sf => "#ffffff"

}
$profiles["foowm"]  = $defaults.merge({
  :p => "Foo-WM",
  :sb => "#91ff00",
  :sf => "#000000"
})

# Password Prompt for pwdhashX
$profiles["domain"] = $app.merge({
  :p => "Domain",
  :sb => "#A2FF00",
  :fn => "Envy Code R-11",
  :sf => "#000000"
})

$profiles["password"] = $app.merge({
  :p => "Password",
  :nb => "#000000",
  :nf => "#000000",
  :fn => "Envy Code R-11",
})
$profiles["browse"] = $app.merge({
  :p => "Browse",
  :sb => "#ffffff",
  :sf => "#000000"
})

$profiles["jump"] = {
  :p => "Jump",
  :fn => "Envy Code R-12",
  :sb => "#ffc400",
  :nf => "#ffffff",
  :sb => "#ffc400",
  :sf => "#000000"
}
$profiles["surf"] = $app.merge({
  :p => "Url",
  :y => ($screen[:height]) - 30,
  :w => $screen[:width] - 20,
  :h => 20,
  :fn => "Envy Code R-10"


})

$profiles["netcfg"] =  {
  :p => "Netcfg",
  :fn => "Envy Code R-11",
  :sb => "#ffc400",
  :nf => "#ffffff",
  :nb => "#000000",
  :sf => "#000000"
}

$profiles.merge({
  "surfSearch" =>  $app.merge({
  :p => "Surf Find:"
}),
  "wifi" => { }
})

def dmenuOptsToString(optsHash)
  returnString = "dmenu "
  optsHash.each do |option, value|
    if (value.is_a? String)
      value = "'#{value}'"
    end
    returnString = "#{returnString} -#{option} #{value}"
  end

  return returnString
end

def main
  $stdout = STDERR
  if ($profiles[ARGV[0]] != nil) then
    $defaults.merge!($profiles[ARGV[0]])
  end

  if (ARGV[1] != nil) then
    $defaults[:p] = ARGV[1]
  end

  dm = dmenuOptsToString($defaults) 
  $stdout = STDOUT
  $stdout.puts %x[#{dm}]
end

main
