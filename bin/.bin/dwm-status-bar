#!/usr/bin/env ruby
# encoding: utf-8
require 'pty'
require 'json'

$title = ""
$memory = ""
$cpu = ""
$date = ""
$battery = ""
$user = %x[whoami].chomp!
$hostname = %x[hostname].chomp!

$date_f = "/home/#{$user}/.bar_date_enabled"
File.write($date_f, "true") if !File.exist?($date_f)
$date_enabled = File.read("/home/#{$user}/.bar_date_enabled").chomp! == "true"

def refresh_bar
  items = []
  #items.push($title) if $title != ""
  items.push($battery)  if $battery != ""
  items.push($memory)  if $memory != ""
  items.push($cpu)  if $cpu != ""
  items.push($date) if $date_enabled && $date != ""

  res = items.join(" | ").gsub("\n", "")
  STDOUT.puts res
  %x[xsetroot -name "#{res}"]
  #STDOUT.puts "," + ([{
  #  :full_text => [
  #    "<span color='#000000' >",
  #    items.join(" | ").gsub("\n", ""),
  #    "</span>"
  #  ].join(""),
  #  :markup => :pango
  #}]).to_json 

  STDOUT.flush
end

def poll_xtitle 
  cmd = "xtitle -s" 
  begin
    PTY.spawn( cmd ) do |stdout, stdin, pid|
      begin
        stdout.each { |line| 
          $title = line.chomp!
          $title.gsub!(/ - VIM$/, "")
          refresh_bar
        }
      rescue Errno::EIO
        #puts "Errno:EIO error, but this probably just means " +
        #      "that the process has finished giving output"
      end
    end
  rescue PTY::ChildExited
    puts "The child process exited!"
  end
end


def update_battery
  $battery = %x[battery].chomp!.match(/(\d|\.|%)+/)[0] 
end

def update_date
  $date = %x[date +"%I:%M%p"].chomp!
end

def update_cpu
  $cpu = %x[sensors | awk '/temp1/ { print $2 }' | tr -d '+' ]
end

def update_memory
  mem = %x[free -ht | tail -n1 | sed -r "s/\\s+/\\n/g" | tail -n3 | head -n2 | tac].split("\n")
  $memory= "#{mem[0]}/#{mem[1]}"
end

def updates
  update_date
  update_battery
  update_memory
  update_cpu
end

def init_msg 
  #STDOUT.puts '{ "version": 1 }'
  #STDOUT.puts "["
  #STDOUT.puts "[]" 
  STDOUT.flush
end

init_msg
updates
Thread.new {
  loop do
    updates
    refresh_bar
    sleep 60
  end
}
poll_xtitle
