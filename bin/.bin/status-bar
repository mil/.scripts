#!/usr/bin/env ruby
require 'pty'
require 'json'

$title = ""
$date = ""
$battery = ""
$user = %x[whoami].chomp!
$hostname = %x[hostname].chomp!
$date_enabled = File.read("/home/#{$user}/.date_enabled").chomp! == "true"


def refresh_bar
  items = []
  items.push($title) if $title != ""
  items.push($battery)  if $battery != ""
  items.push($date) if $date_enabled && $date != ""

  STDOUT.puts "," + ([{
    :full_text => items.join("|").gsub("\n", "")
  }]).to_json 
  STDOUT.flush
end

def poll_xtitle 
  cmd = "xtitle -s" 
  begin
    PTY.spawn( cmd ) do |stdout, stdin, pid|
      begin
        stdout.each { |line| 
          $title = line.chomp!
          if $hostname == "chip"
            $title = $title[0..20]
          end
          refresh_bar
        }
      rescue Errno::EIO
        puts "Errno:EIO error, but this probably just means " +
              "that the process has finished giving output"
      end
    end
  rescue PTY::ChildExited
    puts "The child process exited!"
  end
end

def poll_date
  Thread.new {
    loop do
      $date = %x[date +"%I:%M%p"].chomp!
      refresh_bar
      sleep 60
    end
  }
end


def poll_battery
  Thread.new {
    loop do
      if $hostname == "chip" then
        $battery = %x[bash /home/chip/.bin/chipbat].chomp!
      else
        $battery = %x[battery]
      end
      refresh_bar
      sleep 60
    end
  }
end

def init_msg 
  STDOUT.puts '{ "version": 1 }'
  STDOUT.puts "["
  STDOUT.puts "[]"
  STDOUT.flush
end

init_msg
poll_battery
poll_date
poll_xtitle
