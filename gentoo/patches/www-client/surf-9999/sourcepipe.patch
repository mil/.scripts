diff --git a/surf.c b/surf.c
index 2b54e3c..b1a358d 100644
--- a/surf.c
+++ b/surf.c
@@ -254,6 +254,68 @@ static int modparams[ParameterLast];
 static int pipein[2], pipeout[2];
 char *argv0;
 
+void sourcepipe(Client *c, const Arg *a);
+
+static void
+sourcepipe_execute(char* buffer, Arg *arg) {
+	int to[2];
+  void (*oldsigpipe)(int);
+
+  if (pipe(to) == -1)
+    return;
+
+	switch (fork()) {
+	case -1:
+		close(to[0]);
+		close(to[1]);
+		return;
+	case 0:
+		dup2(to[0], STDIN_FILENO); close(to[0]); close(to[1]);
+		execvp(((char **)arg->v)[0], (char **)arg->v);
+		fprintf(stderr, "st: execvp %s\n", ((char **)arg->v)[0]);
+		perror("failed");
+		exit(0);
+	}
+
+	close(to[0]);
+	oldsigpipe = signal(SIGPIPE, SIG_IGN);
+  write(to[1], buffer, (strlen(buffer)));
+	close(to[1]);
+	signal(SIGPIPE, oldsigpipe);
+}
+static void
+sourcepipe_resource_done(GObject *r, GAsyncResult *a, Arg *arg)
+{
+  guchar *buffer = webkit_web_resource_get_data_finish(r, a, NULL, NULL);
+  sourcepipe_execute(buffer, arg);
+}
+static void
+sourcepipe_js_done(GObject *r, GAsyncResult *a, Arg *arg)
+{
+  WebKitJavascriptResult *jr = webkit_web_view_run_javascript_finish(WEBKIT_WEB_VIEW(r), a, NULL);
+  if (!jr) { return; }
+  JSCValue *v = webkit_javascript_result_get_js_value (jr);
+  if (jsc_value_is_string(v)) {
+    gchar *buffer = jsc_value_to_string(v);
+    sourcepipe_execute(buffer, arg);
+    g_free (buffer);
+  }
+  webkit_javascript_result_unref(jr);
+}
+void
+sourcepipe(Client *c, const Arg *a)
+{
+  if (curconfig[JavaScript].val.i) {
+    webkit_web_view_run_javascript(c->view, "window.document.body.outerHTML", NULL, sourcepipe_js_done, a);
+  } else {
+    WebKitWebResource *cc;
+    if ((cc = webkit_web_view_get_main_resource(c->view)) != NULL) {
+      webkit_web_resource_get_data(cc, NULL, sourcepipe_resource_done, a);
+    }
+  }
+}
+
+
 static ParamName loadtransient[] = {
 	Certificate,
 	CookiePolicies,
