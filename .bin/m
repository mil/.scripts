#!/usr/bin/env sh

styl() {
  tput rev; printf %b "$1"; tput sgr0;
  shift
  tput setaf 14; printf " %b" "$@\n"; tput sgr0
  printf %b " $3"
}

usage() {
  styl "[m]ail wrapper"
  echo " (via mailblaze, mbsync, msmtp, ncurses)            "
  echo "  - Write configs: m writeconfigs                   "
  echo "  - Update state: m u                              "
  echo "  - Pick messages {unread,flagged}: m p {:u, :F}    "
  echo "  - Grep messages: m g {header|*|/:regex,prebuilt}  "
  echo "     Prebuilts: sd - sxmo-devel, sa - sxmo-announce "
  echo "  - Scan messages: m s                              "
  echo "  - Compound update, pick, scan: m ups             "
  echo "                                                    "
  exit 1
}

writeconfigs() {
  styl "[w]rite configs"
  mkdir -p ~/.mblaze ~/Maildir
  echo "
    account default
    host mail.messagingengine.com
    from m@milesalan.com
    auth on
    user miles@sent.com
    tls on
    tls_starttls off
  " | xargs -0 echo | sed '/^[[:space:]]*$/d' | awk '{$1=$1};1' > ~/.smtprc

  echo "
    Local-Mailbox: "Miles Alan" <m@milesalan.com>
    Sendmail: msmtp
    Scan-Format: %c%u%r %-3n %10d %17f %t %2i%s
    Outbox: /home/m/Maildir/Sent
  " | xargs -0 echo | sed '/^[[:space:]]*$/d' | awk '{$1=$1};1' > ~/.mblaze/profile

  echo "
    # First section: remote IMAP account
    IMAPAccount fastmail
    Host imap.fastmail.com
    Port 993
    User miles@sent.com
    #PassCmd "foo"
    SSLType IMAPS
    SSLVersions TLSv1.2

    IMAPStore fastmail-remote
    Account fastmail

    MaxMessages 200
    ExpireUnread yes

    # This section describes the local storage
    MaildirStore fastmail-local
    Path ~/Maildir/
    Inbox ~/Maildir/INBOX
    # The SubFolders option allows to represent all
    # IMAP subfolders as local subfolders
    SubFolders Verbatim

    # This section a "channel", a connection between remote and local
    Channel fastmail
    Master :fastmail-remote:
    Slave :fastmail-local:
    Patterns *
    Expunge None
    CopyArrivalDate yes
    Sync All
    Create Slave
    SyncState *
  " | xargs -0 echo | awk '{$1=$1};1' > ~/.mbsyncrc
}

grap() {
  styl "grep" "$@"
  QUERY="$@"
  QUERY="$(echo "$QUERY" | sed 's#sd#*:~mil/sxmo-devel@lists.sr.ht#g')"
  QUERY="$(echo "$QUERY" | sed 's#sa#*:~mil/sxmo-announce@lists.sr.ht#g')"
  QUERY="$(echo "$QUERY" | sed 's#st#Subject:~mil/sxmo-tickets#g')"
  echo "Modified grep query: $QUERY"
  rm -f ~/.mblaze/seq- 
  set -o xtrace
  mlist /home/m/Maildir/INBOX /home/m/Maildir/Sent |
    magrep "$QUERY" |
    msort |
    mthread |
    tac |
    mseq -S
  set +o xtrace
}

pick() {
  styl "[p]ick" "$@"
  rm -f ~/.mblaze/seq- 
  set -o xtrace
  mlist /home/m/Maildir/INBOX /home/m/Maildir/Sent |
    mpick -v "$@" |
    msort |
    mthread |
    tac |
    mseq -S
  set +o xtrace
}

colors() {
  export MCOLOR_CUR=1
  export MCOLOR_HEADER=4
  export MCOLOR_FOOTER=1
  export MCOLOR_SIG=1
  export MCOLOR_QUOTE=2
  export MCOLOR_QQUOTE=3
  export MCOLOR_QQQUOTE=7
  export MCOLOR_SEP=1
  export MCOLOR_FROM=5
}

lss() {
  colors
  mpick 1:1000 | mless
}

update() {
  styl "[u]update" "$@"
  printf %b "Syncing with IMAP server via mbsync\n"
  mbsync -a
}

scan() {
  styl "[s]can" "$@"
  mscan "$@"
};

show() {
  colors
  mshow "$@"
}

w() { writeconfigs; }
u() { update; }
p() { pick "$@"; }
s() { scan "$@"; }
g() { grap "$@"; }
l() { lss "$@"; }
v() { show "$@"; }
ups() { u; p; s; }

if type "$1" 2>/dev/null>/dev/null; then
  writeconfigs
  "$@"
else
  usage
fi
